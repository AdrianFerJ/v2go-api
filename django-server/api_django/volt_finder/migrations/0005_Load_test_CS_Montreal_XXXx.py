# Generated by Django 2.1.5 on 2019-03-08 20:21

from django.db import migrations
import json
from django.contrib.gis.geos import fromstr
from pathlib import Path
import csv


# CSV file contains 260 CS locations (in Montreal)
DATA_FILENAME = 'start_data/cleaned_circuitElectrique_MTL_260.csv'
#../volt_finder/start_data/

def translateChargeLevel(chrg_lev):
    #TODO: cleaned data should have properly formatted charge levels
    """ Translate charge level provided into a valid formatted choice
        Based on ChargingStation model, CHARGE_LEVEL choices 
    """
    if chrg_lev == 'Level2':
        return 'LEVEL_2'
    elif chrg_lev == 'FastDC':
        return 'FAST_DC'
    elif chrg_lev == 'Level1':
        return 'LEVEL_1'
    else:
        return ''

def load_data(apps, schema_editor):
    """ Takes csv file and loads data to CS model"""
    print("\n## Attempting to load {0} ...".format(DATA_FILENAME))
    ChargingStation = apps.get_model('volt_finder', 'ChargingStation')
    csv_file = Path(__file__).parents[1] / DATA_FILENAME
    with open(csv_file, 'r') as f:
        reader = csv.reader(f)
        data = list(reader)
        print("## Data set has {0} rows".format(len(data)))

    for row in data:
        try:        
            # Match fields (based on wrangle.ipynb in start_data)
            ChargingStation.objects.create( 
                name         = r[0],
                external_id  = r[1],
                charge_level = translateChargeLevel(r[2]),   #df1.charger_level,
                tarif_text   = r[3],
                address      = r[4], 
                city         = r[5],
                province     = r[6],
                country      = 'Canada',
                postal_code  = r[7],
                lat          = float(r[8]),
                lng          = float(r[8]),
            ).save()
            #TODO cs.save() ???
        except:
            print("Invalid row, couldn't be saved", row[0], row[1])


class Migration(migrations.Migration):

    dependencies = [
        ('volt_finder', '0004_auto_20190308_0057'),
    ]

    operations = [
         migrations.RunPython(load_data)
    ]
